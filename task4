<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>My Portfolio</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 0;
    }

    header, footer {
      background: #333;
      color: white;
      padding: 1rem;
      text-align: center;
    }

    nav {
      display: flex;
      justify-content: center;
      gap: 2rem;
      margin-top: 1rem;
    }

    nav a {
      color: white;
      text-decoration: none;
      font-weight: bold;
    }

    section {
      padding: 2rem;
    }

    .container {
      max-width: 1000px;
      margin: auto;
    }

    .hidden {
      display: none;
    }

    /* Responsive Layout */
    @media (max-width: 600px) {
      nav {
        flex-direction: column;
        gap: 1rem;
      }
    }

    /* To-Do & Product styling */
    input, select, button, textarea {
      padding: 0.5rem;
      margin: 0.3rem;
      font-size: 1rem;
    }

    .todo-list li {
      display: flex;
      justify-content: space-between;
      background: #f4f4f4;
      margin: 0.3rem 0;
      padding: 0.5rem;
    }

    .product-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 1rem;
    }

    .product {
      border: 1px solid #ccc;
      padding: 1rem;
    }
  </style>
</head>
<body>
  <header>
    <h1>My Portfolio</h1>
    <nav>
      <a href="#" onclick="showSection('about')">About</a>
      <a href="#" onclick="showSection('projects')">Projects</a>
      <a href="#" onclick="showSection('contact')">Contact</a>
    </nav>
  </header>

  <main class="container">
    <!-- About Section -->
    <section id="about">
      <h2>About Me</h2>
      <p>Hello! I'm a web developer skilled in HTML, CSS, JavaScript, and building interactive web applications. Welcome to my portfolio!</p>
    </section>

    <!-- Projects Section -->
    <section id="projects" class="hidden">
      <h2>Projects</h2>

      <h3>1. To-Do List (Local Storage)</h3>
      <input id="taskInput" placeholder="Enter task">
      <button onclick="addTask()">Add</button>
      <ul class="todo-list" id="taskList"></ul>

      <h3>2. Product Page (Filter & Sort)</h3>
      <label>Filter by Category:
        <select id="categoryFilter" onchange="filterProducts()">
          <option value="all">All</option>
          <option value="Books">Books</option>
          <option value="Electronics">Electronics</option>
        </select>
      </label>
      <label>Sort by:
        <select id="sortSelect" onchange="filterProducts()">
          <option value="none">None</option>
          <option value="price">Price</option>
          <option value="rating">Rating</option>
        </select>
      </label>
      <div class="product-grid" id="productGrid"></div>
    </section>

    <!-- Contact Section -->
    <section id="contact" class="hidden">
      <h2>Contact</h2>
      <form onsubmit="alert('Message Sent!'); return false;">
        <input type="text" placeholder="Your Name" required><br>
        <input type="email" placeholder="Your Email" required><br>
        <textarea placeholder="Your Message" required></textarea><br>
        <button type="submit">Send</button>
      </form>
    </section>
  </main>

  <footer>
    <p>&copy; 2025 My Portfolio</p>
  </footer>

  <script>
    // Section Navigation
    function showSection(id) {
      document.querySelectorAll('section').forEach(sec => sec.classList.add('hidden'));
      document.getElementById(id).classList.remove('hidden');
    }

    // To-Do App
    function addTask() {
      const taskInput = document.getElementById('taskInput');
      const task = taskInput.value.trim();
      if (!task) return;

      const tasks = JSON.parse(localStorage.getItem('tasks')) || [];
      tasks.push(task);
      localStorage.setItem('tasks', JSON.stringify(tasks));
      taskInput.value = '';
      renderTasks();
    }

    function renderTasks() {
      const tasks = JSON.parse(localStorage.getItem('tasks')) || [];
      const taskList = document.getElementById('taskList');
      taskList.innerHTML = '';
      tasks.forEach((task, index) => {
        const li = document.createElement('li');
        li.innerHTML = `${task} <button onclick="removeTask(${index})">X</button>`;
        taskList.appendChild(li);
      });
    }

    function removeTask(index) {
      const tasks = JSON.parse(localStorage.getItem('tasks')) || [];
      tasks.splice(index, 1);
      localStorage.setItem('tasks', JSON.stringify(tasks));
      renderTasks();
    }

    // Product Filter/Sort
    const products = [
      { name: "Book A", category: "Books", price: 10, rating: 4.5 },
      { name: "Phone X", category: "Electronics", price: 499, rating: 4.2 },
      { name: "Book B", category: "Books", price: 15, rating: 4.8 },
      { name: "Headphones", category: "Electronics", price: 89, rating: 4.6 },
    ];

    function filterProducts() {
      const category = document.getElementById('categoryFilter').value;
      const sort = document.getElementById('sortSelect').value;
      let filtered = category === "all" ? products.slice() : products.filter(p => p.category === category);

      if (sort === "price") filtered.sort((a, b) => a.price - b.price);
      else if (sort === "rating") filtered.sort((a, b) => b.rating - a.rating);

      const grid = document.getElementById('productGrid');
      grid.innerHTML = '';
      filtered.forEach(p => {
        const div = document.createElement('div');
        div.className = 'product';
        div.innerHTML = `<h4>${p.name}</h4><p>Category: ${p.category}</p><p>Price: $${p.price}</p><p>Rating: ${p.rating}</p>`;
        grid.appendChild(div);
      });
    }

    // Initialize
    renderTasks();
    filterProducts();
  </script>
</body>
</html>
